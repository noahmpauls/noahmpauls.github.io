{"version":3,"sources":["resources/images/sunshine.jpg","resources/images/cheetos.jpg","resources/images/shakespeare.jpg","resources/images/essential.jpg","resources/images/disney.jpg","resources/images/crazy.jpg","resources/images/glass.jpg","resources/images/explosion.jpg","resources/images/cold.jpg","resources/images/amazing.jpg","resources/images/wreath.jpg","components/CharByChar.js","components/ConsoleSequence.js","components/VerifiedInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CharByChar","props","state","currentIndex","letterDelay","children","length","complete","this","timerID","setInterval","incrementIndex","clearInterval","textLength","setState","onComplete","className","substring","React","Component","ConsoleSequence","orderedChildren","Children","map","child","index","dependencies","dependencyMap","cloneElement","id","key","dependentOn","notifyNext","undefined","window","scrollTo","document","body","scrollHeight","visible","p","VerifiedInput","answer","Set","toLowerCase","text","isAnswered","handleChange","bind","event","inputText","target","value","textCase","toUpperCase","answerCheck","has","inputTextClass","styleOnComplete","type","spellCheck","autoComplete","autoFocus","readOnly","onChange","Camputer","BootupSequence","LoginSequence","ProblemDescriptionSequence","CamputerProblems","CamputerFinale","P1Cheetos","P2Shakespeare","P3Essential","P4Disney","P5Glass","P6Singing","P7Cold","P8Amazing","Cbr","withOnCompleteCall","Cimg","alt","Comp","passThroughProps","BootupLoadingBars","CamputerText","LoadingBar","SecurityQuestionSequence","IdentityInfoSequence","src","sunshine","width","cheetos","shakespeare","essential","disney","crazy","glass","explosion","cold","amazing","wreath","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da784c8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunshine.915f0a67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cheetos.2ab5995f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shakespeare.88527ef1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/essential.dd7a6ebf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/disney.ae389cac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crazy.f8f9f22c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/glass.60d10f6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/explosion.8aabbb0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cold.56bf931d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazing.269c223b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wreath.cd15abad.jpg\";","import React from 'react';\r\n\r\nclass CharByChar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentIndex: (this.props.letterDelay <= 0) ? this.props.children.length : 1,\r\n      complete: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.incrementIndex(), this.props.letterDelay\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  incrementIndex() {\r\n    let textLength = this.props.children.length;\r\n    if (this.state.currentIndex >= textLength) {\r\n      clearInterval(this.timerID);\r\n      this.setState({complete: true}, this.props.onComplete);\r\n    } else {\r\n      this.setState((state) => ({\r\n        currentIndex: state.currentIndex+1\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <p className={this.props.className}>\r\n        {this.props.children.substring(0, this.state.currentIndex)}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharByChar;\r\n","import React from 'react';\r\n\r\nclass ConsoleSequence extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.orderedChildren = React.Children.map(this.props.children, (child, index) => {\r\n      let dependencies = (this.props.dependencyMap)\r\n                         ? this.props.dependencyMap[index]\r\n                         : (index > 0) ? [index-1] : [];\r\n      return React.cloneElement(child, {id: index,\r\n                                        key: index,\r\n                                        dependentOn: dependencies,\r\n                                        onComplete: () => this.notifyNext(index)\r\n                                       });\r\n    });\r\n    this.state = {};\r\n  }\r\n\r\n  notifyNext(index) {\r\n    this.setState({[index]: true},\r\n      (index+1 === this.orderedChildren.length) ? this.props.onComplete : undefined\r\n    );\r\n    window.scrollTo(0,document.body.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.orderedChildren.map(child => {\r\n          let visible = true;\r\n          for (var p of child.props.dependentOn) {\r\n            visible = visible && this.state[p];\r\n          }\r\n          if (visible) {\r\n            return child;\r\n          } else {\r\n            return <div className=\"inline\"></div>\r\n          }\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConsoleSequence;\r\n","import React from 'react';\r\n\r\nclass VerifiedInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (typeof props.answer === \"object\") {\r\n      this.answer = new Set(props.answer.map(answer => answer.toLowerCase()));\r\n    } else if (typeof props.answer === \"string\") {\r\n      this.answer = new Set([props.answer.toLowerCase()]);\r\n    }\r\n    this.state = {\r\n      text: \"\",\r\n      isAnswered: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let inputText = event.target.value;\r\n    if (this.props.textCase === \"uppercase\") {\r\n      inputText = inputText.toUpperCase();\r\n    } else if (this.props.textCase === \"lowercase\") {\r\n      inputText = inputText.toLowerCase();\r\n    }\r\n    const answerCheck = (this.answer.has(inputText.toLowerCase()));\r\n      this.setState({text: inputText, isAnswered: answerCheck},\r\n        (answerCheck) ? this.props.onComplete : undefined);\r\n  }\r\n\r\n  render() {\r\n    let inputTextClass = this.props.className;\r\n    if (this.state.isAnswered && this.props.styleOnComplete) {\r\n      inputTextClass += \" \" + this.props.styleOnComplete;\r\n    }\r\n    return (\r\n      <div className={this.className}>\r\n        >&nbsp;\r\n        <input type=\"text\" className={\"consoleInput \" + inputTextClass} spellCheck=\"false\" autoComplete=\"off\" autoFocus=\"autofocus\"\r\n          value={this.state.text}\r\n          readOnly={this.state.isAnswered}\r\n          onChange={this.handleChange}></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifiedInput;\r\n","import React from 'react';\nimport './App.css';\n\nimport CharByChar from \"./components/CharByChar.js\";\nimport ConsoleSequence from \"./components/ConsoleSequence.js\";\nimport VerifiedInput from \"./components/VerifiedInput.js\";\n\nimport sunshine from \"./resources/images/sunshine.jpg\";\nimport cheetos from \"./resources/images/cheetos.jpg\";\nimport shakespeare from \"./resources/images/shakespeare.jpg\";\nimport essential from \"./resources/images/essential.jpg\";\nimport disney from \"./resources/images/disney.jpg\";\nimport crazy from \"./resources/images/crazy.jpg\";\nimport glass from \"./resources/images/glass.jpg\";\nimport explosion from \"./resources/images/explosion.jpg\";\nimport cold from \"./resources/images/cold.jpg\";\nimport amazing from \"./resources/images/amazing.jpg\";\nimport wreath from \"./resources/images/wreath.jpg\";\n\nfunction App() {\n  return (\n    <div className=\"consoleWindow\">\n      <Camputer />\n    </div>\n  );\n}\n\nfunction Camputer() {\n  return (\n    <ConsoleSequence>\n      <BootupSequence />\n      <LoginSequence />\n      <ProblemDescriptionSequence />\n      <CamputerProblems />\n      <CamputerFinale />\n    </ConsoleSequence>\n  );\n}\n\nfunction CamputerProblems(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <P1Cheetos />\n      <P2Shakespeare />\n      <P3Essential />\n      <P4Disney />\n      <P5Glass />\n      <P6Singing />\n      <P7Cold />\n      <P8Amazing />\n    </ConsoleSequence>\n  );\n}\n\nconst Cbr = withOnCompleteCall(() => <br/>);\nconst Cimg = withOnCompleteCall((props) => <img alt=\"\" {...props}/>)\n\n\nfunction withOnCompleteCall(Comp) {\n  return class extends React.Component {\n    componentDidMount() {\n      this.props.onComplete();\n    }\n\n    render() {\n      const { onComplete, dependentOn, id, ...passThroughProps } = this.props;\n      return <Comp {...passThroughProps}/>\n    }\n  }\n}\n\n{/*function ComingSoon(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar letterDelay=\"3000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"80\" className=\"inline\">\n        Coming soon.\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}*/}\n\nfunction BootupSequence(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar letterDelay=\"2000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Scanning\n      </CharByChar>\n      <CharByChar letterDelay=\"100\" className=\"inline\">\n        &nbsp;. . . . . . . .&nbsp;\n      </CharByChar>\n      <Cbr/>\n      <CharByChar letterDelay=\"500\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        This machine has been in a low power state for:\n      </CharByChar>\n      <CharByChar letterDelay=\"500\" className=\"inline\">\n        &nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        27,934,882 years.\n      </CharByChar>\n      <CharByChar letterDelay=\"500\" className=\"inline\">\n        &nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Type \"boot\" to power on.\n      </CharByChar>\n      <VerifiedInput answer={\"boot\"} styleOnComplete=\"disabled\"/>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Booting up\n      </CharByChar>\n      <CharByChar letterDelay=\"100\" className=\"inline\">\n        &nbsp;. . . . . . . .&nbsp;\n      </CharByChar>\n      <BootupLoadingBars />\n      <CharByChar letterDelay=\"500\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Boot complete.\n      </CharByChar>\n      <CharByChar letterDelay=\"500\">\n        &shy;\n      </CharByChar>\n      <CamputerText letterDelay=\"1\" className=\"center\"/>\n      <CharByChar letterDelay=\"500\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction BootupLoadingBars(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Spinning Drives:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"20\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Loading Files:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"5\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Frying Capacitors:&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"10\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Dusting Shelves:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"30\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Calculating Hashes:&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"15\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Finishing Homework:&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"50\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Clearing Caches:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"10\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Cancelling Meetings:&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"1\" className=\"inline\"/>\n\n      <CharByChar letterDelay=\"1\" className=\"inline\">\n        Checking Network:&nbsp;&nbsp;&nbsp;&nbsp;\n      </CharByChar>\n      <LoadingBar letterDelay=\"10\" className=\"inline\"/>\n      <Cbr/>\n    </ConsoleSequence>\n  );\n}\n\nfunction LoadingBar(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar className=\"inline\" {...props}>\n        &#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;&#9608;\n      </CharByChar>\n      <CharByChar letterDelay=\"1\" className=\"inline\" {...props}>\n        &nbsp;&nbsp;Done!\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\n/*\nSource : http://patorjk.com/software/taag/#p=display&f=Small&t=CAMPUTER\nFont: Small\n */\nfunction CamputerText(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar {...props}>\n        _______________________________________________________________________________________________________________________________________\n      </CharByChar>\n      {/* CAMPUTER */}\n      <CharByChar {...props}>\n        &nbsp;&nbsp;___&nbsp;&nbsp;&nbsp;_&nbsp;&nbsp;&nbsp;__&nbsp;&nbsp;__&nbsp;___&nbsp;_&nbsp;&nbsp;&nbsp;_&nbsp;_____&nbsp;___&nbsp;___&nbsp;\n      </CharByChar>\n      <CharByChar {...props}>\n        &nbsp;/&nbsp;__|&nbsp;/_\\&nbsp;|&nbsp;&nbsp;\\/&nbsp;&nbsp;|&nbsp;_&nbsp;\\&nbsp;|&nbsp;|&nbsp;|_&nbsp;&nbsp;&nbsp;_|&nbsp;__|&nbsp;_&nbsp;\\\n      </CharByChar>\n      <CharByChar {...props}>\n        |&nbsp;(__&nbsp;/&nbsp;_&nbsp;\\|&nbsp;|\\/|&nbsp;|&nbsp;&nbsp;_/&nbsp;|_|&nbsp;|&nbsp;|&nbsp;|&nbsp;|&nbsp;_||&nbsp;&nbsp;&nbsp;/\n      </CharByChar>\n      <CharByChar {...props}>\n        &nbsp;\\___/_/&nbsp;\\_\\_|&nbsp;&nbsp;|_|_|&nbsp;&nbsp;\\___/&nbsp;&nbsp;|_|&nbsp;|___|_|_\\\n      </CharByChar>\n      {/* 1000 */}\n      <CharByChar {...props}>\n        &nbsp;_&nbsp;&nbsp;__&nbsp;&nbsp;&nbsp;__&nbsp;&nbsp;&nbsp;__&nbsp;&nbsp;\n      </CharByChar>\n      <CharByChar {...props}>\n        /&nbsp;|/&nbsp;&nbsp;\\&nbsp;/&nbsp;&nbsp;\\&nbsp;/&nbsp;&nbsp;\\&nbsp;\n      </CharByChar>\n      <CharByChar {...props}>\n      |&nbsp;|&nbsp;()&nbsp;|&nbsp;()&nbsp;|&nbsp;()&nbsp;|\n      </CharByChar>\n      <CharByChar {...props}>\n        |_|\\__/&nbsp;\\__/&nbsp;\\__/&nbsp;\n      </CharByChar>\n      {/*Information*/}\n      <Cbr />\n      <CharByChar {...props}>\n        Version: 12.26.18\n      </CharByChar>\n      <CharByChar {...props}>\n        Last Firmware Update: Dec 2019\n      </CharByChar>\n      <CharByChar {...props}>\n        Author: NoCamDo Inc.\n      </CharByChar>\n      <CharByChar {...props}>\n        _______________________________________________________________________________________________________________________________________\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction LoginSequence(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Login required. Please enter your last name:\n      </CharByChar>\n      <VerifiedInput answer=\"stame\" textCase=\"uppercase\"  styleOnComplete=\"disabled\"/>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Processing\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        additional identity verification required. Please answer the following\n        security questions:\n      </CharByChar>\n      <Cbr/><Cbr/>\n      <SecurityQuestionSequence />\n      <IdentityInfoSequence />\n    </ConsoleSequence>\n  );\n}\n\nfunction SecurityQuestionSequence(props) {\n  return (\n    <ConsoleSequence dependencyMap={[[],[],[0],[0],[2],[2],[1, 3, 5]]}{...props}>\n      <CharByChar letterDelay=\"1\">\n        What is your current state of residence?\n      </CharByChar>\n      <VerifiedInput answer=\"Idaho\"  styleOnComplete=\"approved\"/>\n      <CharByChar letterDelay=\"1\">\n        What is the highest form of humor?\n      </CharByChar>\n      <VerifiedInput answer=\"pun\" className=\"inline\"  styleOnComplete=\"approved\"/>\n      <CharByChar letterDelay=\"1\">\n        For how many months have you been dating?\n      </CharByChar>\n      <VerifiedInput answer={[\"twelve\", \"12\"]}  styleOnComplete=\"approved\"/>\n      <CharByChar letterDelay=\"0\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction IdentityInfoSequence(props) {\n  return (\n    <ConsoleSequence{...props}>\n      <CharByChar letterDelay=\"100\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Identity successfully verified.\n      </CharByChar>\n      <CharByChar letterDelay=\"200\">\n        &shy;\n      </CharByChar>\n      <Cimg src={sunshine} alt=\"Sunshine\" width=\"30%\" className=\"center\"/>\n      <CharByChar letterDelay=\"500\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"center\">\n        NAME: Cambria Stame\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"center\">\n        DOB: May 15th, 1998\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"center\">\n        OCCUPATION: Lutheran Baller\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"center\">\n        FUN FACT: Can defeat Formula 1 drivers at go-karts.\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction ProblemDescriptionSequence(props) {\n  return (\n    <ConsoleSequence{...props}>\n      <Cbr />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Checking user identity file system integrity\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline error\">\n        error!\n      </CharByChar>\n      <CharByChar letterDelay=\"500\" className=\"inline error\">\n        &nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline error\">\n        This machine's file system is corrupted, and user data has been lost.\n        Possible causes include the twenty-seven million years that this computer\n        has been waiting to be turned on.\n      </CharByChar>\n      <Cbr />\n      <Cbr />\n      <CharByChar letterDelay=\"20\">\n        User data can only be retrieved through manual re-entry by the user,\n        CAMBRIA STAME. Without this information, the CAMPUTER 1000 will not\n        operate properly.\n      </CharByChar>\n      <Cbr />\n      <CharByChar letterDelay=\"20\">\n        To begin data retrieval, please read the following fine print and type\n        \"agree\":\n      </CharByChar>\n      <Cbr />\n      <CharByChar letterDelay=\"1\" className=\"fine-print\">\n        I, CAMBRA STAME, hereby consent that I will provide correct data to the\n        CAMPUTER 1000 such that it will be restored to full operation. I confirm\n        that my education includes a large amount of computer science training,\n        enabling me to understand exactly what I am doing. I will not break the\n        machine in the process of attempting to fix it. In the event that I do\n        by some improbable miscalculation break this machine, such as through\n        stack overflow, buffer overflow, memory leakage, CPU overheating,\n        dropping makeup onto the motherboard, hurting this machine's feelings,\n        causing a computer midlife crisis, sending the economy into tumult,\n        creating elevated anxiety for this computer's family and friends due to\n        its increasingly precarious mental state, getting caught hacking into a\n        foreign government's mainframe and spending at least 30 years in prison\n        before ultimately being released in a spy swap at which point you are\n        brought back to the US and hailed as a hero to your country before going\n        off the grid, or misspelling any word that you are about to type, I\n        waive all rights to a refund or repairs at the expense of the\n        manufacturer, NoCamDo Inc..\n      </CharByChar>\n      <Cbr />\n      <VerifiedInput answer=\"agree\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\">\n        Thank you for your agreement to the terms and conditions. Beginning data\n        retrieval process.\n      </CharByChar>\n      <Cbr />\n      <CharByChar letterDelay=\"20\">\n        The CAMPUTER will present you with a series of questions that it thinks\n        it knows the answers to, but needs user confirmation to fully confirm.\n        Let's begin!\n      </CharByChar>\n      <CharByChar letterDelay=\"500\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P1Cheetos(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          ____________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #1: Eating Habits\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          ____________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        It is known that the mysterious Cambria Stame eats food from time to\n        time, but what food this is exactly is uncertain.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        From the following choices, please type the letter of the food item that\n        Cambria Stame would NOT normally consider eating if she finds herself\n        hungry in the evening:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) An entire bag of Cheetos\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) A whole pound of pepperoni mac and cheese\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) Some carrots\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) A steak the size of the Great Pyramid of Giza\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"C\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={cheetos} alt=\"Cheetos\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Were one to only know Cambria, her love of all things protein and carbs\n        might come as a surprise. But in the context of the larger Stame fam\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        i\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        ly,\n        it makes total sense. Who needs salad, anyway? Definitely nobody. Salad\n        should not exist.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P2Shakespeare(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          _____________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #2: Reading Habits\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          _____________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Food is not the only thing Cambria Stame seems to enjoy. The feeding of\n        her stomach is complemented by the feeding of her mind with books of all\n        sorts, but her favorites are...\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        ...well, we're not exactly sure. From the following, please select the\n        author that Cambria is most likely to pick up on a sunny afternoon:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) William Shakespeare\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) Guy Fieri\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) Joel Osteen\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) Bob The Builder\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"A\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={shakespeare} alt=\"Shakespeare\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Cambria simply cannot get enough of the English playwright Shakespeare.\n        She could spend an entire lifetime leafing through his verse. Cambria\n        often imagines a fairytale existence wherein she meets a man who reads\n        her hand-written sonnets from outside her ba\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        l\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        cony. Unfortunately for her,\n        I hear she's stuck with some guy who's obsessed with computers. Ah well.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P3Essential(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          ____________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #3: Superstitions\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          ____________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Oh no! A hypothetical situation has arisen in which Cambria becomes\n        terribly ill! What help does she seek first?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) A doctor\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) Friends and/or family\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) Trusted over-the-counter medications\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) Food, water, and rest\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        E) Water vapor with flowers in it\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"E\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        If the following two objects were falling off a cliff, which would\n        Cambria be more likely to save?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) The solution to world hunger\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) A 30 mL bottle of lavender extract\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"B\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={essential} alt=\"Essential\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        I'm just a computer. Maybe I don't kn\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        o\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        w anything. But this whole essential oils thing freaks me out. Like,\n        who decided these oils were essential? The Dalai Lama? The Pope? Paul\n        Gerhardt? My hard drives shudder just thinking about this stuff.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P4Disney(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          _________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #4: Fairytales\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          _________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Suffering from a midlife crisis, Cambria seeks guidance from a higher\n        source of truth than the world's fickle ideas and obsessions. As she\n        seeks out a source of direction, she is faced with the task of choosing\n        a new source for her guiding principles.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        Which of the following sources of truth is Cambria most likely to live\n        by?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) The successes and mistakes of past civilizations\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) An animated movie with talking animals\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) The conclusions of the Greek philosophers\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) Wise and experienced family members, such as parents and grandparents\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"B\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <Cbr />\n      <Cimg src={disney} alt=\"Disney\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        While it wouldn't be my first choice, my own analysis of Disney has led\n        me to conclude that Disney movies aren't the worst place to turn if\n        you're in need of some good old fashioned common sense. Maybe if I, a\n        poor broken computer, watched more Disney, my bytes wouldn't be so\n        disheveled.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        Cambria has conquered her midlife crisis! Now she can tackle any\n        situation with clarity and self-control.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        Suddenly, Cambria sees a gigantic milkshake up for grabs. Her brain\n        immediately yells at her:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) \"Have self-restraint! A moderately-sized milkshake would do just fine.\"\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) \"Perhaps I could share that with several of my friends!\"\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) \"DO IT  CONSUME THE ENTIRE THING  DON'T ASK QUESTIONS\"\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"C\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={crazy} alt=\"Crazy\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        One can only change so much about oneself. And unfortunately, that means\n        that milkshakes will fore\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        v\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        er tremble at the though of Cambria discovering their existence.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P5Glass(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          _________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #5: Obsessions\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          _________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Cambria has discovered her true calling as a construction site manager\n        (???). She begins her career by constructing residential homes. On her\n        first jobsite, she thinks she's finished everything, but then realizes\n        that there is nothing in the place where the front door should be!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        What does Cambria put in the front doorframe?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) A door\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"A\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline error\">\n        incorrect!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        Remember, this is Cambria we're talking about here. Why don't we try\n        this one again?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        What does Cambria put in the front doorframe?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) No, I'm pretty sure it's a door\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"A\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline error\">\n        incorrect!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        I'm telling you, the data just doesn't check out for a door. One last\n        try:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        What does Cambria put in the front doorframe?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) A door\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) A stained glass window\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"B\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={glass} alt=\"Glass\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Give Cambria some credit on this one. Stained glass windows are just\n        cool, and they make ev\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        e\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        rything way better. But she may want to consider a different true\n        calling than construction work. Or maybe she should be put in charge of\n        cathedrals and make all the load-bearing walls and pillars out of\n        stained glass!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P6Singing(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          ______________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #6: Talents\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          ______________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Musical experts have just heard Cambria's voice for the first time. She\n        sang a song from her favorite movie...\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) ...Saving Private Ryan\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) ...The Sound of Music\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) ...Silence of the Lambs\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) ...Taken\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"B\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        ...and after much deliberation, these musical critics rated Cambria's\n        vocal abilities. On average, they scored her...\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) 7/10\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) 10/10\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) 11/10\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) 4,294,967,295/10\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"D\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={explosion} alt=\"Explosion\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Why 4,294,967,295 exactly? Well, it's a bit complicated. Essentially,\n        the critics submitted their ratings on computers like me. 4,294,967,295\n        is the largest 32-bit positive number that a computer like me can really\n        understand. It looks like \"11111111111111111111111111111111\" in binary.\n        It was ph\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        y\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        sically impossible for them to make it higher. What a shame,\n        since in reality Cambria is at least a&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline error\">\n        ERROR:NUMBER_TOO_LARGE\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        &nbsp;out of 10 in my book.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the next data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P7Cold(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          _____________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #7: Climate Change\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          _____________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Cambria has recently moved from California to Idaho! Her favorite part\n        of the state is:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) The love for the second ammendment among its citizens\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) Conservative values and viewpoints all around\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) Support for the Christian way of life\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) Easy access to nature and the great outdoors\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        E) The tropical temperatures\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        F) The kindness of the people in Boise\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        G) The cheap prices of groceries and gas\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        H) The adventure of travel and exploration in a new place\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"E\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={cold} alt=\"Cold\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Kick back, relax, and drink that pina colada on the shoreline. That is,\n        the shoreline of the fr\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        o\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        zen Boise river. And don't expose your lips to the elements for too\n        long, or else you might get frostbite. And be sure you're holding your\n        drink with gloves on, or else your fingers might get frozen to the\n        glass.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        Hey, Idaho weather builds character, okay?\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"next\" to go to the final data fault:\n      </CharByChar>\n      <VerifiedInput answer=\"next\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1000\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction P8Amazing(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <ConsoleSequence dependencyMap={[[],[],[],[]]}>\n        <CharByChar letterDelay=\"1\">\n          ___________________________\n        </CharByChar>\n        <Cbr />\n        <CharByChar letterDelay=\"1\">\n          DATA FAULT #8: One And Only\n        </CharByChar>\n        <CharByChar letterDelay=\"1\">\n          ___________________________\n        </CharByChar>\n      </ConsoleSequence>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Cambria has met a strange man. After getting over the fact that he is a\n        complete dork, Cambria realizes that this man seems quite intrigued by\n        her. Specifically, Cambria has noticed that this strange man seems to\n        admire her for her:\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        A) Virtue\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        B) Sense of humor\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        C) Beauty\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        D) Adventurous spirit\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        E) Faith\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        F) Intellect\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        G) All of the above\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer=\"G\" textCase=\"uppercase\" styleOnComplete=\"disabled\" />\n      <Cbr />\n      <CharByChar letterDelay=\"20\" className=\"inline\">\n        Verifying\n      </CharByChar>\n      <CharByChar letterDelay=\"200\" className=\"inline\">\n        &nbsp;. . .&nbsp;\n      </CharByChar>\n      <CharByChar letterDelay=\"20\" className=\"inline approved\">\n        correct!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={amazing} alt=\"Amazing\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        What more is there to say, really? Cambria is everything a guy co\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline hint\">\n        u\n      </CharByChar>\n      <CharByChar letterDelay=\"25\" className=\"inline\">\n        ld ever ask for, and much more.\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"10\" className=\"inline\">\n        Data fault rectified. Type \"finish\" to complete the data retrival process:\n      </CharByChar>\n      <VerifiedInput answer=\"finish\" styleOnComplete=\"disabled\" />\n      <CharByChar letterDelay=\"1500\" className=\"inline\">\n        &shy;\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nfunction CamputerFinale(props) {\n  return (\n    <ConsoleSequence {...props}>\n      <Cbr />\n      <CharByChar letterDelay=\"25\">\n        Data retrieval is complete! Thank you for your help.\n      </CharByChar>\n      <CharByChar letterDelay=\"2000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        ...wait. There is still something wrong. A final scan has revealed that\n        there was something missing from each of the past 8 questions. I cannot\n        operate without knowing what those missing pieces are.\n      </CharByChar>\n      <CharByChar letterDelay=\"2000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"25\">\n        Find the missing pieces, and type them together below:\n      </CharByChar>\n      <CharByChar letterDelay=\"0\">\n        &shy;\n      </CharByChar>\n      <VerifiedInput answer={[\"iloveyou\", \"i love you\"]} />\n      <CharByChar letterDelay=\"3000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\">\n        I love you too. ❤\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <Cbr />\n      <Cimg src={wreath} alt=\"Wreath\" width=\"50%\" className=\"center\"/>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"50\" className=\"inline\">\n        Happy one year, Cambria!\n      </CharByChar>\n      <CharByChar letterDelay=\"1000\">\n        &shy;\n      </CharByChar>\n      <CharByChar letterDelay=\"70\" className=\"inline\">\n        - Noah\n      </CharByChar>\n    </ConsoleSequence>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}